/*
 * Hand.cpp
 *
 *  Created on: Sep 20, 2017
 *      Author: dylanfernandes
 */

#include "Hand.h"
#include <iostream>
using namespace std;

Hand::Hand(int max) {
	maxCards = max;
	numCards = 0;

}

void Hand::PrintHand()
{
	Card::cardType type;
	cout << "Current Hand"<< endl;
	cout << "____________"<< endl;
	for(int i = 0;i < maxCards;i++)
	{
		if(!cards.empty() && i < cards.size())
		{
			type = cards.at(i).getCardVal();
			cout << "Card Slot " << i+1 << ": " << type << endl;
		}
		else
		{
			cout << "Card Slot " << i+1 << ": Empty Slot" << endl;
		}
	}
}

void Hand::SelectExchange()
{
	int card1;
	int card2;
	int card3;
	PrintHand();
	if(numCards >= 3)
	{
		cout << "Select the three cards you wish to exchange" << endl;
		cout << "Select Card 1: ";
		cin >> card1;
		cout << "Select Card 2: ";
		cin >> card2;
		cout << "Select Card 3: ";
		cin >> card3;
		if(VerifyExchange(card1,card2,card3))
		{
			cout << "Successful exchange." << endl;
		}
		else
		{
			cout << "Invalid exchange." << endl;
		}
	}
	else
		cout << "Not enough cards in hand to exchange" << endl;
}

bool Hand::VerifyExchange(int c1, int c2, int c3)
{
	Card::cardType type1 = cards.at(c1-1); //index starts at 0
	Card::cardType type2 = cards.at(c2-1);
	Card::cardType type3 = cards.at(c3-1);
}

Hand::~Hand() {
	// TODO Auto-generated destructor stub
}

